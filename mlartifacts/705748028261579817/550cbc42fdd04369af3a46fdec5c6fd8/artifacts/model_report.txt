### MODEL ARCHITECTURE ###
SqueezeNetWithCosineHead(
  (head): CNNPatchDownscaleHead(
    (features): Sequential(
      (0): Conv2d(3, 32, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 3, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
    )
  )
  (encoder): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (3): Fire(
      (squeeze): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
    (4): Fire(
      (squeeze): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (6): Fire(
      (squeeze): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
    (7): Fire(
      (squeeze): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
    (8): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=True)
    (9): Fire(
      (squeeze): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
    (10): Fire(
      (squeeze): Conv2d(384, 48, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(48, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
    (11): Fire(
      (squeeze): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
    (12): Fire(
      (squeeze): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (squeeze_activation): ReLU(inplace=True)
      (expand1x1): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
      (expand1x1_activation): ReLU(inplace=True)
      (expand3x3): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (expand3x3_activation): ReLU(inplace=True)
    )
  )
  (pool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (0): Flatten(start_dim=1, end_dim=-1)
    (1): Linear(in_features=512, out_features=128, bias=True)
    (2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): ReLU(inplace=True)
    (4): Dropout(p=0.5, inplace=False)
    (5): CosineClassifier()
  )
)

### MODEL SUMMARY ###
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
SqueezeNetWithCosineHead                 [1, 5]                    --
├─CNNPatchDownscaleHead: 1-1             [1, 3, 224, 224]          --
│    └─Sequential: 2-1                   [1, 3, 180, 318]          --
│    │    └─Conv2d: 3-1                  [1, 32, 360, 635]         4,736
│    │    └─BatchNorm2d: 3-2             [1, 32, 360, 635]         64
│    │    └─ReLU: 3-3                    [1, 32, 360, 635]         --
│    │    └─Conv2d: 3-4                  [1, 3, 180, 318]          2,403
├─Sequential: 1-2                        [1, 512, 13, 13]          --
│    └─Conv2d: 2-2                       [1, 64, 111, 111]         1,792
│    └─ReLU: 2-3                         [1, 64, 111, 111]         --
│    └─MaxPool2d: 2-4                    [1, 64, 55, 55]           --
│    └─Fire: 2-5                         [1, 128, 55, 55]          --
│    │    └─Conv2d: 3-5                  [1, 16, 55, 55]           1,040
│    │    └─ReLU: 3-6                    [1, 16, 55, 55]           --
│    │    └─Conv2d: 3-7                  [1, 64, 55, 55]           1,088
│    │    └─ReLU: 3-8                    [1, 64, 55, 55]           --
│    │    └─Conv2d: 3-9                  [1, 64, 55, 55]           9,280
│    │    └─ReLU: 3-10                   [1, 64, 55, 55]           --
│    └─Fire: 2-6                         [1, 128, 55, 55]          --
│    │    └─Conv2d: 3-11                 [1, 16, 55, 55]           2,064
│    │    └─ReLU: 3-12                   [1, 16, 55, 55]           --
│    │    └─Conv2d: 3-13                 [1, 64, 55, 55]           1,088
│    │    └─ReLU: 3-14                   [1, 64, 55, 55]           --
│    │    └─Conv2d: 3-15                 [1, 64, 55, 55]           9,280
│    │    └─ReLU: 3-16                   [1, 64, 55, 55]           --
│    └─MaxPool2d: 2-7                    [1, 128, 27, 27]          --
│    └─Fire: 2-8                         [1, 256, 27, 27]          --
│    │    └─Conv2d: 3-17                 [1, 32, 27, 27]           4,128
│    │    └─ReLU: 3-18                   [1, 32, 27, 27]           --
│    │    └─Conv2d: 3-19                 [1, 128, 27, 27]          4,224
│    │    └─ReLU: 3-20                   [1, 128, 27, 27]          --
│    │    └─Conv2d: 3-21                 [1, 128, 27, 27]          36,992
│    │    └─ReLU: 3-22                   [1, 128, 27, 27]          --
│    └─Fire: 2-9                         [1, 256, 27, 27]          --
│    │    └─Conv2d: 3-23                 [1, 32, 27, 27]           8,224
│    │    └─ReLU: 3-24                   [1, 32, 27, 27]           --
│    │    └─Conv2d: 3-25                 [1, 128, 27, 27]          4,224
│    │    └─ReLU: 3-26                   [1, 128, 27, 27]          --
│    │    └─Conv2d: 3-27                 [1, 128, 27, 27]          36,992
│    │    └─ReLU: 3-28                   [1, 128, 27, 27]          --
│    └─MaxPool2d: 2-10                   [1, 256, 13, 13]          --
│    └─Fire: 2-11                        [1, 384, 13, 13]          --
│    │    └─Conv2d: 3-29                 [1, 48, 13, 13]           12,336
│    │    └─ReLU: 3-30                   [1, 48, 13, 13]           --
│    │    └─Conv2d: 3-31                 [1, 192, 13, 13]          9,408
│    │    └─ReLU: 3-32                   [1, 192, 13, 13]          --
│    │    └─Conv2d: 3-33                 [1, 192, 13, 13]          83,136
│    │    └─ReLU: 3-34                   [1, 192, 13, 13]          --
│    └─Fire: 2-12                        [1, 384, 13, 13]          --
│    │    └─Conv2d: 3-35                 [1, 48, 13, 13]           18,480
│    │    └─ReLU: 3-36                   [1, 48, 13, 13]           --
│    │    └─Conv2d: 3-37                 [1, 192, 13, 13]          9,408
│    │    └─ReLU: 3-38                   [1, 192, 13, 13]          --
│    │    └─Conv2d: 3-39                 [1, 192, 13, 13]          83,136
│    │    └─ReLU: 3-40                   [1, 192, 13, 13]          --
│    └─Fire: 2-13                        [1, 512, 13, 13]          --
│    │    └─Conv2d: 3-41                 [1, 64, 13, 13]           24,640
│    │    └─ReLU: 3-42                   [1, 64, 13, 13]           --
│    │    └─Conv2d: 3-43                 [1, 256, 13, 13]          16,640
│    │    └─ReLU: 3-44                   [1, 256, 13, 13]          --
│    │    └─Conv2d: 3-45                 [1, 256, 13, 13]          147,712
│    │    └─ReLU: 3-46                   [1, 256, 13, 13]          --
│    └─Fire: 2-14                        [1, 512, 13, 13]          --
│    │    └─Conv2d: 3-47                 [1, 64, 13, 13]           32,832
│    │    └─ReLU: 3-48                   [1, 64, 13, 13]           --
│    │    └─Conv2d: 3-49                 [1, 256, 13, 13]          16,640
│    │    └─ReLU: 3-50                   [1, 256, 13, 13]          --
│    │    └─Conv2d: 3-51                 [1, 256, 13, 13]          147,712
│    │    └─ReLU: 3-52                   [1, 256, 13, 13]          --
├─AdaptiveAvgPool2d: 1-3                 [1, 512, 1, 1]            --
├─Sequential: 1-4                        [1, 5]                    --
│    └─Flatten: 2-15                     [1, 512]                  --
│    └─Linear: 2-16                      [1, 128]                  65,664
│    └─BatchNorm1d: 2-17                 [1, 128]                  256
│    └─ReLU: 2-18                        [1, 128]                  --
│    └─Dropout: 2-19                     [1, 128]                  --
│    └─CosineClassifier: 2-20            [1, 5]                    640
==========================================================================================
Total params: 796,259
Trainable params: 796,259
Non-trainable params: 0
Total mult-adds (Units.GIGABYTES): 1.49
==========================================================================================
Input size (MB): 10.97
Forward/backward pass size (MB): 137.78
Params size (MB): 3.19
Estimated Total Size (MB): 151.94
==========================================================================================